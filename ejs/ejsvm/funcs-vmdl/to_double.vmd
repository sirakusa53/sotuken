#include "../header-vmdl/patterns.vmdh"

#include "../header-vmdl/externc.vmdh"


(needContext, triggerGC, makeInline, calledFromC) to_double : JSValue -> double
to_double(v){
    top: match(v){
        case(Fixnum v){
            return fixnum_to_double(v);
        }
        case(Flonum v){
            return flonum_to_double(v);
        }
        case(String v){
            cstring p = string_value(v);
            if(IsEmptyCstring(p)) return 0.0;
            cstring q;
            int n;
            (n, q) <- Strtol(p, 10);
            if(p != q && IsEmptyCstring(q)) return cint_to_double(n);
            double d;
            (d, q) <- Strtod(p);
            if(p != q && IsEmptyCstring(q)) return d;
            return NAN;
        }
        case(Special v){
            return special_to_double(v);
        }
        case(object v){
            JSValue w = object_to_number(v);
            objectLevel: match(w){
                case(Fixnum w){
                    return cint_to_double(fixnum_to_cint(w));
                }
                case(Flonum w){
                    return flonum_to_double(w);
                }
            }
        }
        case(true){
            return NAN;
        }
    }
}