#include "../header-vmdl/patterns.vmdh"

#include "../header-vmdl/externc.vmdh"

(needContext, triggerGC, makeInline) object_to_number : JSObject -> Number
object_to_number(v){
    JSValue f1 = get_prop(v, gconsts.g_string_valueof);
    if(f1 != JS_EMPTY){
        match(f1){
            case(callable f1){
                JSValue invoked;
                match(f1){
                    case(Function f1){
                        invoked <- invoke_function0(v, f1, true);
                    }
                    case(Builtin f1){
                        invoked <- invoke_builtin0(v, f1, true);
                    }
                }
                match(invoked){
                    case(number invoked){
                        return invoked;
                    }
                    case(String invoked){
                        return string_to_number(invoked);
                    }
                    case(Special invoked){
                        return special_to_number(invoked);
                    }
                }
            }
        }
    }
    JSValue f2 = get_prop(v, gconsts.g_string_tostring);
    if(f2 != JS_EMPTY){
        match(f2){
            case(callable f2){
                JSValue invoked;
                match(f2){
                    case(Function f2){
                        invoked <- invoke_function0(v, f2, true);
                    }
                    case(Builtin f2){
                        invoked <- invoke_builtin0(v, f2, true);
                    }
                }
                match(invoked){
                    case(number invoked){
                        return invoked;
                    }
                    case(String invoked){
                        return string_to_number(invoked);
                    }
                    case(Special invoked){
                        return special_to_number(invoked);
                    }
                }
            }
        }
    }
    print_value_simple(v);
    PutLnChar();
    print_value_simple(f2);
    PutLnChar();
    type_error_exception("neither valueOf nor to_string returned a number in object_to_number");
    return FIXNUM_ZERO;
}