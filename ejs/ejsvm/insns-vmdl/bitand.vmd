#include "../header-vmdl/patterns.vmdh"

#include "../header-vmdl/externc.vmdh"

(vmInstruction, needContext, triggerGC, tailCall)
bitand : (JSValue, JSValue) -> JSValue

bitand (v1, v2) {
  top: match (v1, v2) {
    case (Fixnum v1 && Fixnum v2) {
      return FIXNUM_AND(v1, v2);
    }
    case (Fixnum v1 && Flonum v2) {
      int32_t x1 = cint_to_int32(to_cint(v1));
      int32_t x2 = cint_to_int32(to_cint(v2));
      return cint_to_number(int32_to_cint(x1 & x2));
    }
    case (Flonum v1 && Fixnum v2) {
      int32_t x1 = cint_to_int32(to_cint(v1));
      int32_t x2 = cint_to_int32(to_cint(v2));
      return cint_to_number(int32_to_cint(x1 & x2));
    }
    case (Flonum v1 && Flonum v2) {
      int32_t x1 = cint_to_int32(to_cint(v1));
      int32_t x2 = cint_to_int32(to_cint(v2));
      return cint_to_number(int32_to_cint(x1 & x2));
    }
    case (number v1) {
      Number u2 = to_number(v2);
      rematch top(v1, u2);
    }
    case (number v2) {
      Number u1 = to_number(v1);
      rematch top(u1, v2);
    }
    case (true) {
      Number u1 = to_number(v1);
      Number u2 = to_number(v2);
      rematch top(u1, u2);
    }
  }
}
