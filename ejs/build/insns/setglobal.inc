#define prop v0
#define src v1

DEFLABEL(HEAD): __attribute__((unused));
INSN_COUNT2(setglobal,prop,src);Lsetglobal0: __attribute__((unused));
TLsetglobal_any_string: __attribute__((unused));
TLsetglobal_any_string_object: __attribute__((unused));
TLsetglobal_any_builtin: __attribute__((unused));
TLsetglobal_any_iterator: __attribute__((unused));
TLsetglobal_any_special: __attribute__((unused));
TLsetglobal_any_function: __attribute__((unused));
TLsetglobal_any_fixnum: __attribute__((unused));
TLsetglobal_any_boolean_object: __attribute__((unused));
TLsetglobal_any_array: __attribute__((unused));
TLsetglobal_any_any: __attribute__((unused));
TLsetglobal_any_simple_object: __attribute__((unused));
TLsetglobal_any_flonum: __attribute__((unused));
TLsetglobal_any_regexp: __attribute__((unused));
TLsetglobal_any_number_object: __attribute__((unused));
switch((unsigned int) get_ptag(prop).v){ // vmgen.newsynth.DecisionDiagram$PTNode@550(2)
case TV_FLONUM:
case TV_SPECIAL:
case TV_FIXNUM:
default:
case TV_GENERIC:
Lsetglobal1: __attribute__((unused));
TLsetglobal_iterator_number_object: __attribute__((unused));
TLsetglobal_iterator_special: __attribute__((unused));
TLsetglobal_special_number_object: __attribute__((unused));
TLsetglobal_array_string_object: __attribute__((unused));
TLsetglobal_array_array: __attribute__((unused));
TLsetglobal_flonum_string_object: __attribute__((unused));
TLsetglobal_iterator_function: __attribute__((unused));
TLsetglobal_function_iterator: __attribute__((unused));
TLsetglobal_string_object_number_object: __attribute__((unused));
TLsetglobal_fixnum_regexp: __attribute__((unused));
TLsetglobal_iterator_any: __attribute__((unused));
TLsetglobal_array_any: __attribute__((unused));
TLsetglobal_special_function: __attribute__((unused));
TLsetglobal_simple_object_regexp: __attribute__((unused));
TLsetglobal_iterator_builtin: __attribute__((unused));
TLsetglobal_array_fixnum: __attribute__((unused));
TLsetglobal_string_object_array: __attribute__((unused));
TLsetglobal_boolean_object_special: __attribute__((unused));
TLsetglobal_string_object_builtin: __attribute__((unused));
TLsetglobal_regexp_any: __attribute__((unused));
TLsetglobal_simple_object_array: __attribute__((unused));
TLsetglobal_array_string: __attribute__((unused));
TLsetglobal_array_flonum: __attribute__((unused));
TLsetglobal_boolean_object_iterator: __attribute__((unused));
TLsetglobal_array_number_object: __attribute__((unused));
TLsetglobal_function_boolean_object: __attribute__((unused));
TLsetglobal_special_string_object: __attribute__((unused));
TLsetglobal_flonum_flonum: __attribute__((unused));
TLsetglobal_fixnum_special: __attribute__((unused));
TLsetglobal_simple_object_special: __attribute__((unused));
TLsetglobal_string_object_special: __attribute__((unused));
TLsetglobal_boolean_object_builtin: __attribute__((unused));
TLsetglobal_builtin_regexp: __attribute__((unused));
TLsetglobal_special_any: __attribute__((unused));
TLsetglobal_number_object_array: __attribute__((unused));
TLsetglobal_regexp_function: __attribute__((unused));
TLsetglobal_boolean_object_string_object: __attribute__((unused));
TLsetglobal_iterator_regexp: __attribute__((unused));
TLsetglobal_function_flonum: __attribute__((unused));
TLsetglobal_function_special: __attribute__((unused));
TLsetglobal_simple_object_boolean_object: __attribute__((unused));
TLsetglobal_boolean_object_regexp: __attribute__((unused));
TLsetglobal_special_array: __attribute__((unused));
TLsetglobal_builtin_special: __attribute__((unused));
TLsetglobal_regexp_number_object: __attribute__((unused));
TLsetglobal_string_object_flonum: __attribute__((unused));
TLsetglobal_regexp_regexp: __attribute__((unused));
TLsetglobal_fixnum_builtin: __attribute__((unused));
TLsetglobal_boolean_object_boolean_object: __attribute__((unused));
TLsetglobal_special_simple_object: __attribute__((unused));
TLsetglobal_regexp_fixnum: __attribute__((unused));
TLsetglobal_function_string: __attribute__((unused));
TLsetglobal_iterator_string: __attribute__((unused));
TLsetglobal_number_object_boolean_object: __attribute__((unused));
TLsetglobal_builtin_builtin: __attribute__((unused));
TLsetglobal_flonum_regexp: __attribute__((unused));
TLsetglobal_special_fixnum: __attribute__((unused));
TLsetglobal_flonum_iterator: __attribute__((unused));
TLsetglobal_number_object_string_object: __attribute__((unused));
TLsetglobal_string_object_string_object: __attribute__((unused));
TLsetglobal_regexp_flonum: __attribute__((unused));
TLsetglobal_boolean_object_string: __attribute__((unused));
TLsetglobal_flonum_simple_object: __attribute__((unused));
TLsetglobal_flonum_array: __attribute__((unused));
TLsetglobal_function_simple_object: __attribute__((unused));
TLsetglobal_special_flonum: __attribute__((unused));
TLsetglobal_function_builtin: __attribute__((unused));
TLsetglobal_flonum_fixnum: __attribute__((unused));
TLsetglobal_simple_object_number_object: __attribute__((unused));
TLsetglobal_regexp_array: __attribute__((unused));
TLsetglobal_number_object_fixnum: __attribute__((unused));
TLsetglobal_simple_object_iterator: __attribute__((unused));
TLsetglobal_flonum_number_object: __attribute__((unused));
TLsetglobal_number_object_regexp: __attribute__((unused));
TLsetglobal_function_any: __attribute__((unused));
TLsetglobal_regexp_special: __attribute__((unused));
TLsetglobal_fixnum_simple_object: __attribute__((unused));
TLsetglobal_string_object_any: __attribute__((unused));
TLsetglobal_fixnum_number_object: __attribute__((unused));
TLsetglobal_boolean_object_number_object: __attribute__((unused));
TLsetglobal_string_object_string: __attribute__((unused));
TLsetglobal_regexp_builtin: __attribute__((unused));
TLsetglobal_string_object_simple_object: __attribute__((unused));
TLsetglobal_number_object_simple_object: __attribute__((unused));
TLsetglobal_special_boolean_object: __attribute__((unused));
TLsetglobal_fixnum_function: __attribute__((unused));
TLsetglobal_simple_object_fixnum: __attribute__((unused));
TLsetglobal_function_number_object: __attribute__((unused));
TLsetglobal_function_array: __attribute__((unused));
TLsetglobal_string_object_iterator: __attribute__((unused));
TLsetglobal_simple_object_flonum: __attribute__((unused));
TLsetglobal_fixnum_iterator: __attribute__((unused));
TLsetglobal_special_builtin: __attribute__((unused));
TLsetglobal_array_boolean_object: __attribute__((unused));
TLsetglobal_fixnum_string: __attribute__((unused));
TLsetglobal_builtin_flonum: __attribute__((unused));
TLsetglobal_builtin_number_object: __attribute__((unused));
TLsetglobal_boolean_object_array: __attribute__((unused));
TLsetglobal_iterator_iterator: __attribute__((unused));
TLsetglobal_special_iterator: __attribute__((unused));
TLsetglobal_fixnum_flonum: __attribute__((unused));
TLsetglobal_builtin_fixnum: __attribute__((unused));
TLsetglobal_builtin_any: __attribute__((unused));
TLsetglobal_builtin_boolean_object: __attribute__((unused));
TLsetglobal_special_special: __attribute__((unused));
TLsetglobal_flonum_function: __attribute__((unused));
TLsetglobal_boolean_object_function: __attribute__((unused));
TLsetglobal_regexp_simple_object: __attribute__((unused));
TLsetglobal_number_object_number_object: __attribute__((unused));
TLsetglobal_boolean_object_simple_object: __attribute__((unused));
TLsetglobal_builtin_string: __attribute__((unused));
TLsetglobal_iterator_boolean_object: __attribute__((unused));
TLsetglobal_regexp_boolean_object: __attribute__((unused));
TLsetglobal_function_function: __attribute__((unused));
TLsetglobal_string_object_boolean_object: __attribute__((unused));
TLsetglobal_flonum_boolean_object: __attribute__((unused));
TLsetglobal_number_object_function: __attribute__((unused));
TLsetglobal_array_regexp: __attribute__((unused));
TLsetglobal_special_regexp: __attribute__((unused));
TLsetglobal_array_function: __attribute__((unused));
TLsetglobal_string_object_function: __attribute__((unused));
TLsetglobal_simple_object_simple_object: __attribute__((unused));
TLsetglobal_fixnum_string_object: __attribute__((unused));
TLsetglobal_simple_object_any: __attribute__((unused));
TLsetglobal_boolean_object_any: __attribute__((unused));
TLsetglobal_regexp_string: __attribute__((unused));
TLsetglobal_fixnum_boolean_object: __attribute__((unused));
TLsetglobal_builtin_iterator: __attribute__((unused));
TLsetglobal_flonum_special: __attribute__((unused));
TLsetglobal_function_string_object: __attribute__((unused));
TLsetglobal_iterator_fixnum: __attribute__((unused));
TLsetglobal_simple_object_function: __attribute__((unused));
TLsetglobal_flonum_any: __attribute__((unused));
TLsetglobal_string_object_regexp: __attribute__((unused));
TLsetglobal_fixnum_array: __attribute__((unused));
TLsetglobal_boolean_object_fixnum: __attribute__((unused));
TLsetglobal_number_object_any: __attribute__((unused));
TLsetglobal_number_object_special: __attribute__((unused));
TLsetglobal_iterator_flonum: __attribute__((unused));
TLsetglobal_function_regexp: __attribute__((unused));
TLsetglobal_function_fixnum: __attribute__((unused));
TLsetglobal_builtin_simple_object: __attribute__((unused));
TLsetglobal_flonum_string: __attribute__((unused));
TLsetglobal_boolean_object_flonum: __attribute__((unused));
TLsetglobal_special_string: __attribute__((unused));
TLsetglobal_builtin_array: __attribute__((unused));
TLsetglobal_number_object_flonum: __attribute__((unused));
TLsetglobal_iterator_simple_object: __attribute__((unused));
TLsetglobal_array_builtin: __attribute__((unused));
TLsetglobal_iterator_array: __attribute__((unused));
TLsetglobal_iterator_string_object: __attribute__((unused));
TLsetglobal_number_object_iterator: __attribute__((unused));
TLsetglobal_simple_object_builtin: __attribute__((unused));
TLsetglobal_flonum_builtin: __attribute__((unused));
TLsetglobal_simple_object_string_object: __attribute__((unused));
TLsetglobal_array_simple_object: __attribute__((unused));
TLsetglobal_number_object_string: __attribute__((unused));
TLsetglobal_builtin_string_object: __attribute__((unused));
TLsetglobal_fixnum_any: __attribute__((unused));
TLsetglobal_simple_object_string: __attribute__((unused));
TLsetglobal_builtin_function: __attribute__((unused));
TLsetglobal_array_special: __attribute__((unused));
TLsetglobal_fixnum_fixnum: __attribute__((unused));
TLsetglobal_array_iterator: __attribute__((unused));
TLsetglobal_string_object_fixnum: __attribute__((unused));
TLsetglobal_regexp_iterator: __attribute__((unused));
TLsetglobal_regexp_string_object: __attribute__((unused));
TLsetglobal_number_object_builtin: __attribute__((unused));
{ // normal_simple_object normal_regexp vmgen.newsynth.DecisionDiagram$Leaf@16

  LOG_EXIT("SETGLOBAL with non-string variable name\n");
/* Local Variables:      */
/* mode: c               */
/* c-basic-offset: 2     */
/* indent-tabs-mode: nil */
/* End:                  */
}
break;
case TV_STRING:
case 3:
case 2:
case 1:
Lsetglobal2: __attribute__((unused));
TLsetglobal_string_builtin: __attribute__((unused));
TLsetglobal_string_flonum: __attribute__((unused));
TLsetglobal_string_iterator: __attribute__((unused));
TLsetglobal_string_function: __attribute__((unused));
TLsetglobal_string_array: __attribute__((unused));
TLsetglobal_string_any: __attribute__((unused));
TLsetglobal_string_special: __attribute__((unused));
TLsetglobal_string_fixnum: __attribute__((unused));
TLsetglobal_string_simple_object: __attribute__((unused));
TLsetglobal_string_regexp: __attribute__((unused));
TLsetglobal_string_string_object: __attribute__((unused));
TLsetglobal_string_boolean_object: __attribute__((unused));
TLsetglobal_string_number_object: __attribute__((unused));
TLsetglobal_string_string: __attribute__((unused));
{ // normal_string normal_regexp vmgen.newsynth.DecisionDiagram$Leaf@54

/*
   setglobal s src
     s : register that has a pointer to a string object
     src : property value to be set
   property value for the string in the global object = $src
 */
#ifdef INLINE_CACHE
  {
    InlineCache *ic = &(INSN_CACHE(curfn->index, pc).inl_cache);
    JSValue obj = context->global;
#ifdef IC_PROF
    ic->count++;
    ic_prof_count++;
    if (ic->prop_name == JS_EMPTY)
      ic->unavailable++;
#endif /* IC_PROF */
    if (ic->prop_name == prop) {
      assert(ic->index <
             object_get_shape(obj)->n_embedded_slots +
             object_get_shape(obj)->n_extension_slots -
             (object_get_shape(obj)->n_extension_slots > 0 ? 1 : 0));
      object_set_prop(obj, ic->index, src);
#ifdef IC_PROF
      ic->hit++;
      ic_prof_hit++;
#endif /* IC_PROF */
    } else {
      assert(ic->prop_name == JS_EMPTY);
      ic->miss++;
      set_prop_with_ic(context, obj, prop, src, ATTR_NONE, ic);
    }
  }
#else /* INLINE_CACHE */
  set_prop(context, context->global, prop, src, ATTR_NONE);
#endif /* INLINE_CACHE */
}
break;
} // vmgen.newsynth.DecisionDiagram$PTNode@550
#undef prop
#undef src

