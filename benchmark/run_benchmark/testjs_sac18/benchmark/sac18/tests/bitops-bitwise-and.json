{
  "type": "File",
  "start": 0,
  "end": 1671,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 37,
      "column": 0
    }
  },
  "errors": [],
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1671,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 37,
        "column": 0
      }
    },
    "sourceType": "script",
    "interpreter": null,
    "body": [
      {
        "type": "ExpressionStatement",
        "start": 1334,
        "end": 1363,
        "loc": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 29
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 1334,
          "end": 1362,
          "loc": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 28
            }
          },
          "operator": "=",
          "left": {
            "type": "Identifier",
            "start": 1334,
            "end": 1349,
            "loc": {
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 26,
                "column": 15
              },
              "identifierName": "bitwiseAndValue"
            },
            "name": "bitwiseAndValue"
          },
          "right": {
            "type": "NumericLiteral",
            "start": 1352,
            "end": 1362,
            "loc": {
              "start": {
                "line": 26,
                "column": 18
              },
              "end": {
                "line": 26,
                "column": 28
              }
            },
            "extra": {
              "rawValue": 4294967296,
              "raw": "4294967296"
            },
            "value": 4294967296
          }
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n ",
            "start": 0,
            "end": 1332,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 24,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ForStatement",
        "start": 1364,
        "end": 1439,
        "loc": {
          "start": {
            "line": 27,
            "column": 0
          },
          "end": {
            "line": 28,
            "column": 42
          }
        },
        "init": {
          "type": "VariableDeclaration",
          "start": 1369,
          "end": 1378,
          "loc": {
            "start": {
              "line": 27,
              "column": 5
            },
            "end": {
              "line": 27,
              "column": 14
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 1373,
              "end": 1378,
              "loc": {
                "start": {
                  "line": 27,
                  "column": 9
                },
                "end": {
                  "line": 27,
                  "column": 14
                }
              },
              "id": {
                "type": "Identifier",
                "start": 1373,
                "end": 1374,
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 9
                  },
                  "end": {
                    "line": 27,
                    "column": 10
                  },
                  "identifierName": "i"
                },
                "name": "i"
              },
              "init": {
                "type": "NumericLiteral",
                "start": 1377,
                "end": 1378,
                "loc": {
                  "start": {
                    "line": 27,
                    "column": 13
                  },
                  "end": {
                    "line": 27,
                    "column": 14
                  }
                },
                "extra": {
                  "rawValue": 0,
                  "raw": "0"
                },
                "value": 0
              }
            }
          ],
          "kind": "var"
        },
        "test": {
          "type": "BinaryExpression",
          "start": 1380,
          "end": 1390,
          "loc": {
            "start": {
              "line": 27,
              "column": 16
            },
            "end": {
              "line": 27,
              "column": 26
            }
          },
          "left": {
            "type": "Identifier",
            "start": 1380,
            "end": 1381,
            "loc": {
              "start": {
                "line": 27,
                "column": 16
              },
              "end": {
                "line": 27,
                "column": 17
              },
              "identifierName": "i"
            },
            "name": "i"
          },
          "operator": "<",
          "right": {
            "type": "NumericLiteral",
            "start": 1384,
            "end": 1390,
            "loc": {
              "start": {
                "line": 27,
                "column": 20
              },
              "end": {
                "line": 27,
                "column": 26
              }
            },
            "extra": {
              "rawValue": 600000,
              "raw": "600000"
            },
            "value": 600000
          }
        },
        "update": {
          "type": "UpdateExpression",
          "start": 1392,
          "end": 1395,
          "loc": {
            "start": {
              "line": 27,
              "column": 28
            },
            "end": {
              "line": 27,
              "column": 31
            }
          },
          "operator": "++",
          "prefix": false,
          "argument": {
            "type": "Identifier",
            "start": 1392,
            "end": 1393,
            "loc": {
              "start": {
                "line": 27,
                "column": 28
              },
              "end": {
                "line": 27,
                "column": 29
              },
              "identifierName": "i"
            },
            "name": "i"
          }
        },
        "body": {
          "type": "ExpressionStatement",
          "start": 1401,
          "end": 1439,
          "loc": {
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 42
            }
          },
          "expression": {
            "type": "AssignmentExpression",
            "start": 1401,
            "end": 1438,
            "loc": {
              "start": {
                "line": 28,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 41
              }
            },
            "operator": "=",
            "left": {
              "type": "Identifier",
              "start": 1401,
              "end": 1416,
              "loc": {
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 28,
                  "column": 19
                },
                "identifierName": "bitwiseAndValue"
              },
              "name": "bitwiseAndValue"
            },
            "right": {
              "type": "BinaryExpression",
              "start": 1419,
              "end": 1438,
              "loc": {
                "start": {
                  "line": 28,
                  "column": 22
                },
                "end": {
                  "line": 28,
                  "column": 41
                }
              },
              "left": {
                "type": "Identifier",
                "start": 1419,
                "end": 1434,
                "loc": {
                  "start": {
                    "line": 28,
                    "column": 22
                  },
                  "end": {
                    "line": 28,
                    "column": 37
                  },
                  "identifierName": "bitwiseAndValue"
                },
                "name": "bitwiseAndValue"
              },
              "operator": "&",
              "right": {
                "type": "Identifier",
                "start": 1437,
                "end": 1438,
                "loc": {
                  "start": {
                    "line": 28,
                    "column": 40
                  },
                  "end": {
                    "line": 28,
                    "column": 41
                  },
                  "identifierName": "i"
                },
                "name": "i"
              }
            }
          }
        }
      },
      {
        "type": "VariableDeclaration",
        "start": 1441,
        "end": 1470,
        "loc": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 29
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1445,
            "end": 1469,
            "loc": {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 30,
                "column": 28
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1445,
              "end": 1451,
              "loc": {
                "start": {
                  "line": 30,
                  "column": 4
                },
                "end": {
                  "line": 30,
                  "column": 10
                },
                "identifierName": "result"
              },
              "name": "result"
            },
            "init": {
              "type": "Identifier",
              "start": 1454,
              "end": 1469,
              "loc": {
                "start": {
                  "line": 30,
                  "column": 13
                },
                "end": {
                  "line": 30,
                  "column": 28
                },
                "identifierName": "bitwiseAndValue"
              },
              "name": "bitwiseAndValue"
            }
          }
        ],
        "kind": "var"
      },
      {
        "type": "VariableDeclaration",
        "start": 1472,
        "end": 1489,
        "loc": {
          "start": {
            "line": 32,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 17
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 1476,
            "end": 1488,
            "loc": {
              "start": {
                "line": 32,
                "column": 4
              },
              "end": {
                "line": 32,
                "column": 16
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1476,
              "end": 1484,
              "loc": {
                "start": {
                  "line": 32,
                  "column": 4
                },
                "end": {
                  "line": 32,
                  "column": 12
                },
                "identifierName": "expected"
              },
              "name": "expected"
            },
            "init": {
              "type": "NumericLiteral",
              "start": 1487,
              "end": 1488,
              "loc": {
                "start": {
                  "line": 32,
                  "column": 15
                },
                "end": {
                  "line": 32,
                  "column": 16
                }
              },
              "extra": {
                "rawValue": 0,
                "raw": "0"
              },
              "value": 0
            }
          }
        ],
        "kind": "var"
      },
      {
        "type": "IfStatement",
        "start": 1490,
        "end": 1669,
        "loc": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 76
          }
        },
        "test": {
          "type": "BinaryExpression",
          "start": 1494,
          "end": 1512,
          "loc": {
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 22
            }
          },
          "left": {
            "type": "Identifier",
            "start": 1494,
            "end": 1500,
            "loc": {
              "start": {
                "line": 33,
                "column": 4
              },
              "end": {
                "line": 33,
                "column": 10
              },
              "identifierName": "result"
            },
            "name": "result"
          },
          "operator": "!=",
          "right": {
            "type": "Identifier",
            "start": 1504,
            "end": 1512,
            "loc": {
              "start": {
                "line": 33,
                "column": 14
              },
              "end": {
                "line": 33,
                "column": 22
              },
              "identifierName": "expected"
            },
            "name": "expected"
          }
        },
        "consequent": {
          "type": "ExpressionStatement",
          "start": 1597,
          "end": 1669,
          "loc": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 76
            }
          },
          "expression": {
            "type": "CallExpression",
            "start": 1597,
            "end": 1668,
            "loc": {
              "start": {
                "line": 35,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 75
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 1597,
              "end": 1602,
              "loc": {
                "start": {
                  "line": 35,
                  "column": 4
                },
                "end": {
                  "line": 35,
                  "column": 9
                },
                "identifierName": "print"
              },
              "name": "print"
            },
            "arguments": [
              {
                "type": "BinaryExpression",
                "start": 1603,
                "end": 1667,
                "loc": {
                  "start": {
                    "line": 35,
                    "column": 10
                  },
                  "end": {
                    "line": 35,
                    "column": 74
                  }
                },
                "left": {
                  "type": "BinaryExpression",
                  "start": 1603,
                  "end": 1658,
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 10
                    },
                    "end": {
                      "line": 35,
                      "column": 65
                    }
                  },
                  "left": {
                    "type": "BinaryExpression",
                    "start": 1603,
                    "end": 1644,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 10
                      },
                      "end": {
                        "line": 35,
                        "column": 51
                      }
                    },
                    "left": {
                      "type": "StringLiteral",
                      "start": 1603,
                      "end": 1633,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 10
                        },
                        "end": {
                          "line": 35,
                          "column": 40
                        }
                      },
                      "extra": {
                        "rawValue": "ERROR: bad result: expected ",
                        "raw": "\"ERROR: bad result: expected \""
                      },
                      "value": "ERROR: bad result: expected "
                    },
                    "operator": "+",
                    "right": {
                      "type": "Identifier",
                      "start": 1636,
                      "end": 1644,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 43
                        },
                        "end": {
                          "line": 35,
                          "column": 51
                        },
                        "identifierName": "expected"
                      },
                      "name": "expected"
                    }
                  },
                  "operator": "+",
                  "right": {
                    "type": "StringLiteral",
                    "start": 1647,
                    "end": 1658,
                    "loc": {
                      "start": {
                        "line": 35,
                        "column": 54
                      },
                      "end": {
                        "line": 35,
                        "column": 65
                      }
                    },
                    "extra": {
                      "rawValue": " but got ",
                      "raw": "\" but got \""
                    },
                    "value": " but got "
                  }
                },
                "operator": "+",
                "right": {
                  "type": "Identifier",
                  "start": 1661,
                  "end": 1667,
                  "loc": {
                    "start": {
                      "line": 35,
                      "column": 68
                    },
                    "end": {
                      "line": 35,
                      "column": 74
                    },
                    "identifierName": "result"
                  },
                  "name": "result"
                }
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentLine",
              "value": " throw \"ERROR: bad result: expected \" + expected + \" but got \" + result;",
              "start": 1518,
              "end": 1592,
              "loc": {
                "start": {
                  "line": 34,
                  "column": 4
                },
                "end": {
                  "line": 34,
                  "column": 78
                }
              }
            }
          ]
        },
        "alternate": null
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n ",
      "start": 0,
      "end": 1332,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " throw \"ERROR: bad result: expected \" + expected + \" but got \" + result;",
      "start": 1518,
      "end": 1592,
      "loc": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 78
        }
      }
    }
  ]
}